apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: testkube
  namespace: cluster-config
spec:
  interval: 5m0s
  releaseName: testkube
  targetNamespace: testkube
  chart:
    spec:
      chart: testkube
      sourceRef:
        kind: HelmRepository
        name: testkube
        namespace: cluster-config
      version: "1.15.25"
  values:
    testkube-api:
      uiIngress:
        enabled: true
        className: "nginx"
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
          nginx.ingress.kubernetes.io/rewrite-target: /$1
          # cert-manager.io/cluster-issuer: letsencrypt-prod
          # acme.cert-manager.io/http01-edit-in-place: "true"
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-credentials: "false"

          # for websockets
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

          # nginx.ingress.kubernetes.io/server-snippet: |
          #   set $methodallowed "";
          #   set $pathallowed "";
    
          #   if ( $request_method = GET ){
          #     set $methodallowed "true";
          #     set $pathallowed "true";
          #   }
    
          #   if ( $request_method = POST ){
          #     set $methodallowed "true";
          #   }
    
          #   if ( $request_method = OPTIONS ){
          #     set $methodallowed "true";
          #   } 
    
          #   if ( $request_method = PATCH ){
          #     set $methodallowed "true";
          #   }      
    
          #   if ( $uri ~ "^(.*)/tests/(.*)/executions$" ){
          #     set $pathallowed "true";
          #   } 
    
          #   if ( $uri ~ "^(.*)/tests/(.*)/executions/(.*)$" ){
          #     set $pathallowed "true";
          #   }  
    
          #   if ( $uri ~ "^(.*)/test-suites/(.*)/executions$" ){
          #     set $pathallowed "true";
          #   }
    
          #   if ( $uri ~ "^(.*)/test-suites/(.*)/executions/(.*)$" ){
          #     set $pathallowed "true";
          #   }
    
          #   if ( $uri ~ "^(.*)/tests$" ){
          #     set $pathallowed "true";
          #   }  
    
          #   if ( $uri ~ "^(.*)/tests/(.*)$" ){
          #     set $pathallowed "true";
          #   }
    
          #   if ( $uri ~ "^(.*)/test-suite-executions/(.*)$" ){
          #     set $pathallowed "true";
          #   }
    
          #   if ( $uri ~ "^(.*)/repositories$" ){
          #     set $pathallowed "true";
          #   }
    
          #   set $condition "$methodallowed+$pathallowed";
          #   if ( $condition != "true+true" ) {
          #     return 401;
          #   }
        path: /results/(v\d/.*)
        hosts:
          - testkube-api.local
        tlsenabled: "false"
        # tls:
        #   - hosts:
        #       - testkube-api
        #     secretName: testkube-cert-secret



    testkube-dashboard:
      enabled: "true"
      ingress:
        className: "nginx"
        enabled: "true" 
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
          # cert-manager.io/cluster-issuer: letsencrypt-dev
          # acme.cert-manager.io/http01-edit-in-place: "true"
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
        path: /
        hosts:
          - testkube-dashboard.local
        tlsenabled: "false"
        # tls:
        #   - hosts:
        #       - testkube-dashboard.local
        #     secretName: testkube-cert-secret
      apiServerEndpoint: "testkube-api.local/results"
